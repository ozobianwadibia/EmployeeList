//helper method that converts strings to enum
EmployeeDepartment stringsToEnum(const string& deptStrings) {
    if (deptStrings == "INFORMATION_TECHNOLOGY") {
        return INFORMATION_TECHNOLOGY;
    }
    else if (deptStrings == "HUMAN_RESOURCES") {
        return HUMAN_RESOURCES;
    }
    else if (deptStrings == "FINANCE") {
        return FINANCE;
    }
    else if (deptStrings == "LEGAL") {
        return LEGAL;
    }
    else if (deptStrings == "PUBLIC_RELATIONS") {
        return PUBLIC_RELATIONS;
    }
}
//********************************************************************************//
//helper method that processes strings
string* refine(string row) {
    const int ROW_SIZE = 14;
    string* containerArray = new string[ROW_SIZE];
    int i = 0;

    stringstream rowStream(row);
    while (rowStream.good()) {
        string substr;
        getline(rowStream, substr, ',');
        containerArray[i] = substr;
        i++;
    }

    return containerArray;
}
//********************************************************************************//

//method that deletes a specified employee
void Employee::deleteEmployee(string empID)
{
    Employee someArray[10];
    cout << "Calling the 'deleteEmployee' method: " << endl;
    int d;
    for (d = 0; d < sizeof(someArray) / sizeof(someArray[0]); d++) {
        string _empID = someArray[d].getEmployeeID();
        if (_empID == empID) {
            cout << "The specified employee is not found!!!" << endl;
        }
        if (someArray[d].getEmployeeID() == empID) {
            someArray[d].setEmployeeID("");
            cout << "The specified employee has been deleted!!!" << endl;
        }
    }
}
//**********************************************************************************//